#!/bin/bash
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------

#   Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
#   reserved.

# user used to run the daemon (defaults to current user)
USER=""

# extra jvm arguments
EXTRA_JVM_ARGUMENTS="-Djava.awt.headless=true"

BASEDIR=`dirname $0`/..
BASEDIR=`(cd "$BASEDIR"; pwd)`

# set pid path for jsvc
PIDFILE="$BASEDIR/var/scm-server.pid"

# set log dir for jsvc
LOGDIR="$BASEDIR/var/log"

# load settings from defaults directory
[ -r /etc/default/scm-server ] && . /etc/default/scm-server
# mac os and bsd
[ -r /etc/defaults/scm-server ] && . /etc/defaults/scm-server



OS=`uname | tr '[:upper:]' '[:lower:]'`
ARCH=`uname -m`

# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "$OS" in
  sunos*)  OS="solaris"
           ARCH=`uname -p`
           ;;
  cygwin*) cygwin=true ;;
  darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/lib
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/conf:"$REPO"/*

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

jsvc=false;
stop="";

if [ "$1" == "start"  ]
then
 jsvc=true;
else
  if [ "$1" == "stop" ]
  then
    jsvc=true;
    stop='-stop';
  fi
fi

USER_ARGUMENT=""

if [ "x$USER" != "x" ]
then
  USER_ARGUMENT="-user $USER"
fi

DARWIN_USE_ARCH="false"

if $jsvc; then

  JSVCCMD=""
  if [ "$OS" == "darwin" ]; then
    if [ "$DARWIN_USE_ARCH" == "true" ]; then
      JSVCCMD="/usr/bin/arch -arch $ARCH $BASEDIR/libexec/jsvc-$OS"
    else
      JSVCCMD="exec $BASEDIR/libexec/jsvc-$OS"
    fi
  else
    JSVCCMD="exec $BASEDIR/libexec/jsvc-$OS-$ARCH"
  fi

  # try to extract JAVA_HOME from JAVACMD
  if [ -z "$JAVA_HOME" ] ; then
    PRG="$JAVACMD"
    while [ -h "$PRG" ] ; do
      ls=`ls -ld "$PRG"`
      link=`expr "$ls" : '.*-> \(.*\)$'`
      if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
      else
        PRG="`dirname "$PRG"`/$link"
      fi
    done
    DIR="$(dirname "$PRG")"
    DIR="$(dirname "$DIR")"
    if [ -d "$DIR" ] ; then
      JAVA_HOME="$DIR"
    fi
  fi

  # TODO JVM Arguments

  SCM_LOG_CONSOLE_APPENDER_ENABLED=false $JSVCCMD -cp "$CLASSPATH" $JAVA_OPTS \
    $EXTRA_JVM_ARGUMENTS $USER_ARGUMENT \
    -outfile "$LOGDIR/scm-server.out" \
    -errfile "$LOGDIR/scm-server.err" \
    -pidfile "$PIDFILE" \
    -jvm server \
    -home "$JAVA_HOME" \
    -Dapp.name="scm-server" \
    -Dapp.pid="$$" \
    -Dapp.repo="$REPO" \
    -Dbasedir="$BASEDIR" \
    $stop sonia.scm.server.ScmServerDaemon \
    "$@"

else

  exec "$JAVACMD" $JAVA_OPTS \
    $EXTRA_JVM_ARGUMENTS \
    -classpath "$CLASSPATH" \
    -Dapp.name="scm-server" \
    -Dapp.pid="$$" \
    -Dapp.repo="$REPO" \
    -Dbasedir="$BASEDIR" \
    sonia.scm.server.ScmServerDaemon \
    "$@"

fi
